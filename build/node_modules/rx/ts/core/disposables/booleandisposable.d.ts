/// <reference types="rx/ts/core/disposables/disposable" />
declare module Rx {
    export interface SingleAssignmentDisposable {
        /** Performs the task of cleaning up resources. */
        dispose(): void;
        /** Is this value disposed. */
        isDisposed: boolean;
        getDisposable(): IDisposable;
        setDisposable(value: IDisposable): void;
    }
    interface SingleAssignmentDisposableStatic {
        new (): SingleAssignmentDisposable;
    }
    export var SingleAssignmentDisposable: SingleAssignmentDisposableStatic;
    export interface SerialDisposable {
        /** Performs the task of cleaning up resources. */
        dispose(): void;
        /** Is this value disposed. */
        isDisposed: boolean;
        getDisposable(): IDisposable;
        setDisposable(value: IDisposable): void;
    }
    interface SerialDisposableStatic {
        new (): SerialDisposable;
    }
    export var SerialDisposable: SerialDisposableStatic;
    export {};
}
