/// <reference types="rx/ts/core/es6-iterable" />
/// <reference types="rx/ts/core/es6-promise" />
declare module Rx {
    type ObservableOrPromise<T> = IObservable<T> | Observable<T> | Promise<T>;
    type ArrayLike<T> = Array<T> | {
        length: number;
        [index: number]: T;
    };
    type ArrayOrIterable<T> = ArrayLike<T> | Iterable<T>;
    /**
     * Promise A+
     */
    interface Promise<T> extends PromiseLike<T> {
    }
    /**
     * Promise A+
     */
    interface IPromise<T> extends PromiseLike<T> {
    }
    /**
    * Represents a push-style collection.
    */
    interface IObservable<T> {
    }
    /**
    * Represents a push-style collection.
    */
    interface Observable<T> extends IObservable<T> {
    }
}
